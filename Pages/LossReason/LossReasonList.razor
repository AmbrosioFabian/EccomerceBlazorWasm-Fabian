@page "/loss-reason"
@using EccomerceBlazorWasm.Interfaces
@using EccomerceBlazorWasm.Models.ViewModel
@inject ILossReason _lossReason;

<div class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg">
    <div class="flex flex-col items-center justify-between p-4 space-y-3 md:flex-row md:space-y-0 md:space-x-4">
        <div class="w-full md:w-1/2">
            <form class="flex items-center" @onsubmit="SearchLossReasons">
                <label for="simple-search" class="sr-only">Buscar</label>
                <div class="relative w-full">
                    <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                        <svg aria-hidden="true" class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <input @bind="searchTerm" type="text" id="simple-search" class="block w-full p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Buscar">
                </div>
                <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">Buscar</button>
            </form>
        </div>
        <div class="flex flex-col items-stretch justify-end flex-shrink-0 w-full space-y-2 md:w-auto md:flex-row md:space-y-0 md:items-center md:space-x-3">
            <button type="button" class="flex items-center justify-center px-4 py-2 text-sm font-medium text-white rounded-lg bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800" @onclick="ShowModal">
                <svg class="h-3.5 w-3.5 mr-2" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                    <path clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" />
                </svg>
                Agregar Categoria
            </button>
        </div>
    </div>
</div>

<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class="px-6 py-3">
                    ID
                </th>
                <th scope="col" class="px-6 py-3">
                    Razon
                </th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    <span class="sr-only">Acciones</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (lossReasons == null)
            {
                <tr>
                    <td colspan="3" class="text-center py-4">Cargando...</td>
                </tr>
            }
            else if (lossReasons.Count == 0)
            {
                <tr>
                    <td colspan="3" class="text-center py-4">No hay Razones disponibles.</td>
                </tr>
            }
            else
            {
                @foreach (var reason in lossReasons)
                {
                    <tr>
                        <th scope="row" class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap dark:text-white">@reason.Id</th>
                        <td class="px-6 py-3">@reason.Reason</td>
                        <td class="px-6 py-3 flex items-center justify-end">
                            <button @onclick="()=>ShowEditModal(reason)" class="rounded-lg block py-2 px-4 hover:bg-yellow-400 dark:hover:bg-yellow-600 dark:hover:text-white">
                                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 3h4a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h4M12 14v4M8 12h8" />
                                </svg>
                            </button>
                            <button @onclick="()=>ShowDeleteModal(reason)" class="rounded-lg block py-2 px-4 text-sm text-gray-700 hover:bg-red-400 dark:hover:bg-red-600 dark:text-gray-200 dark:hover:text-white">
                                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 7h14m-9 3v8m4-8v8M10 3h4a1 1 0 0 1 1 1v3H9V4a1 1 0 0 1 1-1ZM6 7h12v13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7Z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<!-- Modal para crear una razon -->
@if (showModal)
{
    <!-- Main modal -->
    <div id="crud-modal" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 w-full h-full  bg-opacity-35 flex justify-center items-center z-50">
        <div class="relative p-4 w-full sm:max-w-sm h-full md:h-auto">
            <!-- Modal content -->
            <div class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5">
                <!-- Modal header -->
                <div class="flex justify-between items-center pb-4 mb-4 rounded-t border-b sm:mb-5 dark:border-gray-600">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                        Add Product
                    </h3>
                    <button @onclick="HideModal" type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-toggle="defaultModal">
                        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <!-- Modal body -->
                <form @onsubmit="AddLossReason">
                    <div class="grid gap-4 mb-4 sm:grid-cols-2">
                        <div class="col-span-2">
                            <label for="brandName" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Name</label>
                            <input @bind="newReason" type="text" id="brandName" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Type product name">
                        </div>
                    </div>
                    <button type="submit" class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        <svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
                        Agregar Categoria
                    </button>
                </form>
            </div>
        </div>
    </div>
}

<!-- Modal para editar una razon -->
@if (_showModalEdit)
{
    <!-- Main modal -->
    <div id="crud-modal" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 w-full h-full  bg-opacity-35 flex justify-center items-center z-50">
        <div class="relative p-4 w-full sm:max-w-sm h-full md:h-auto">
            <!-- Modal content -->
            <div class="relative p-4 bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5">
                <!-- Modal header -->
                <!-- Agrega el código necesario para el encabezado del modal de edición -->
                <!-- Modal body -->
                <form @onsubmit="EditReason">
                    <div class="grid gap-4 mb-4 sm:grid-cols-2">
                        <div class="col-span-2">
                            <label for="editBrandName" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Razón</label>
                            <input @bind="selectedLossReason.Reason" type="text" id="editBrandName" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Type product name">
                        </div>
                    </div>
                    <button type="submit" class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        <svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
                        Guardar Cambios
                    </button>
                </form>
            </div>
        </div>
    </div>
}

<!-- Modal para eliminar una razon -->
@if (_showModalDelete)
{
    <div class="fixed top-0 left-0 w-full h-full bg-gray-800 bg-opacity-35 flex justify-center items-center z-50">
        <div class="relative p-4 w-full sm:max-w-md h-full md:h-auto">
            <!-- Modal content -->
            <div class="relative p-4 text-center bg-white rounded-lg shadow dark:bg-gray-800 sm:p-5">
                <button type="button" @onclick="HideDeleteModal" class="text-gray-400 absolute top-2.5 right-2.5 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white">
                    <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                    <span class="sr-only">Cerrar modal</span>
                </button>
                <svg class="text-gray-400 dark:text-gray-500 w-11 h-11 mb-3.5 mx-auto" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                </svg>
                <p class="mb-4 text-gray-500 dark:text-gray-300">¿Estás seguro de que deseas eliminar la Razon: @selectedLossReason.Reason?</p>
                <div class="flex justify-center items-center space-x-4">
                    <button type="button" @onclick="HideDeleteModal" class="py-2 px-3 text-sm font-medium text-gray-500 bg-white rounded-lg border border-gray-200 hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-primary-300 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">
                        No, cancelar
                    </button>
                    <button type="button" @onclick="DeleteReason" class="py-2 px-3 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-700 focus:ring-4 focus:outline-none focus:ring-red-300 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-900">
                        Sí, estoy seguro
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<LossReasonViewModel> lossReasons = new List<LossReasonViewModel>();
    private string searchTerm = string.Empty;
    private bool showModal = false;
    private string newReason = string.Empty;
    private bool _showModalEdit = false;
    private bool _showModalDelete = false;
    private LossReasonViewModel selectedLossReason = new LossReasonViewModel();

    protected override async Task OnInitializedAsync()
    {
        await SearchLossReasons();
    }

    private async Task SearchLossReasons()
    {
        lossReasons = await _lossReason.SearchAsync(searchTerm);
    }

    private async Task AddLossReason()
    {
        if (!string.IsNullOrWhiteSpace(newReason))
        {
            var newLossReason = new LossReasonViewModel
                {
                    Reason = newReason
                };

            var result = await _lossReason.CreateAsync(newLossReason);

            if (result != null)
            {
                HideModal();
                await SearchLossReasons();
                newReason = string.Empty;
            }
            else
            {
                // Handle case where loss reason could not be created
            }
        }
        else
        {
            // Handle case where loss reason name is empty
        }
    }

    private void ShowModal()
    {
        showModal = true;
    }

    private void HideModal()
    {
        showModal = false;
    }

    private void ShowEditModal(LossReasonViewModel lossReason)
    {
        selectedLossReason = lossReason;
        _showModalEdit = true;
    }

    private void HideEditModal()
    {
        _showModalEdit = false;
    }

    private void ShowDeleteModal(LossReasonViewModel lossReason)
    {
        selectedLossReason = lossReason;
        _showModalDelete = true;
    }

    private void HideDeleteModal()
    {
        _showModalDelete = false;
    }

    private async Task EditReason()
    {
        HideEditModal();
        var result = await _lossReason.UpdateAsync(selectedLossReason.Id, selectedLossReason);

        if (result)
        {
            await SearchLossReasons(); // Actualiza la lista de marcas después de editar
        }
        else
        {
            // Manejar el caso en el que la marca no se pudo editar
        }
    }

    private async Task DeleteReason()
    {
        _showModalDelete = false;

        lossReasons?.Remove(selectedLossReason); //Eliminar de la lista local, mientras la eliminación se hace en segundo plano

        var result = await _lossReason.DeleteAsync(selectedLossReason.Id);

        if (result)
        {
            await SearchLossReasons(); // Actualiza la lista de marcas después de eliminar
        }
        else
        {
            // Manejar el caso en el que la marca no se pudo eliminar
        }
    }
}
