@layout Layout.MainLayout
@page "/product/create"
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Internal
@using EccomerceBlazorWasm.Interfaces
@using EccomerceBlazorWasm.Interfaces.PorductInterface
@using EccomerceBlazorWasm.Models.CreateModel
@using EccomerceBlazorWasm.Models.ViewModel

@attribute [Authorize(Roles = "admin")]

@inject EccomerceBlazorWasm.Interfaces.IR2 _r2
@inject IProduct _product
@inject IProductBrand _productBrand
@inject IProductCategory _productCategory
@inject IState _state

@inject NavigationManager _navigation

<section class="bg-white dark:bg-gray-900">
    <div class="py-8 px-4 mx-auto max-w-2xl lg:py-16">
        <h2 class="mb-4 text-2xl font-bold text-blue-600 dark:text-white">Crear Producto</h2>
        <!-- Resto del contenido del formulario -->
        <form @onsubmit="HandleSubmit">
            <div Model="product" class="grid gap-4 sm:grid-cols-2 sm:gap-6">
                <div class="sm:col-span-2">
                    <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre del Producto</label>
                    <input type="text" @bind-value="product.Name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Nombre del Producto  " required="">
                </div>
                <div class="w-full">
                    <label for="code" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Codigo</label>
                    <input type="text" @bind-value="product.Code" id="code" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Codigo del Producto" required="">
                </div>
                <div class="w-full">
                    <label for="date" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Fecha</label>
                    <input type="datetime-local" @bind-value="product.Date" id="date" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Product brand" required="">
                </div>
                <div class="w-full">
                    <label for="cost" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Precio de Coste</label>
                    <input type="number" @bind-value="product.Cost" step="0.01" id="cost" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="$2500" required="">
                </div>
                <div class="w-full">
                    <label for="price" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Precio de venta</label>
                    <input type="number" @bind-value="product.Price" step="0.01" id="price" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="$2999" required="">
                </div>
                <div class="w-full">
                    <label for="existence" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Cantidad</label>
                    <input type="number" @bind-value="product.Existence" id="existence" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="50" required="">
                </div>
                <div>
                    <label for="state" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Estado</label>
                    <select @bind="product.StateId" id="state" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                        <option selected="">Selecciona un Estado</option>
                        @foreach (var state in states)
                        {
                            <option value="@state.Id">@state.Name</option>
                        }
                    </select>
                </div>
                <div>
                    <label for="category" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Categoria</label>
                    <select @bind="product.ProductCategoryId" id="category" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                        <option selected="">Selecciona una Categoria</option>
                        @foreach (var category in productCategories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </div>
                <div>
                    <label for="brand" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Marca</label>
                    <select @bind="product.ProductBrandId" id="brand" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                        <option selected="">Selecciona una Marca</option>
                        @foreach (var brand in productBrands)
                        {
                            <option value="@brand.Id">@brand.Name</option>
                        }
                    </select>
                </div>
                <div class="sm:col-span-2">
                    <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" for="default_size">Subir Imagenes</label>
                    <InputFile OnChange="HandleFileSelection" multiple id="default_size" class="block w-full mb-5 text-sm text-gray-900 border border-blue-300 rounded-lg cursor-pointer bg-blue-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400" />
                </div>
            </div>
                
            <button type="submit" class="inline-flex items-center px-5 py-2.5 mt-4 sm:mt-6 text-sm font-medium text-center text-white bg-blue-700 rounded-lg focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900 hover:bg-blue-800">
                Guardar Cambios
            </button>
        </form>

    </div>
</section>
@code {
    private ProductCreateModel product = new ProductCreateModel();
    private List<ProductBrandViewModel> productBrands = new List<ProductBrandViewModel>();
    private List<ProductCategoryViewModel> productCategories = new List<ProductCategoryViewModel>();
    private List<StateViewModel> states = new List<StateViewModel>();
    private List<IBrowserFile> selectedFiles = new List<IBrowserFile>();

    private void HandleFileSelection(InputFileChangeEventArgs e)
    {
        selectedFiles.AddRange(e.GetMultipleFiles());
    }

    private async Task HandleSubmit()
    {
        try
        {
            if (selectedFiles.Any())
            {
                var urls = await _r2.UploadImagesAsync(selectedFiles);
                foreach (var url in urls)
                {
                    Console.WriteLine($"Archivo subido a: {url}");
                }
            }

            // Aquí puedes agregar la lógica para manejar el resto del formulario, como guardar los datos del producto.
            _navigation.NavigateTo("/product/list");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al subir archivos: {ex.Message}");
        }
    }
}